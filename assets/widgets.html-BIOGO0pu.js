import{_ as s,c as a,e as t,o as p}from"./app-D4gqFJvy.js";const e={};function c(i,n){return p(),a("div",null,n[0]||(n[0]=[t(`<h1 id="关于widgets必须知道的事" tabindex="-1"><a class="header-anchor" href="#关于widgets必须知道的事"><span>关于Widgets必须知道的事</span></a></h1><p>本篇内容简要说明:</p><ul><li>widget 介绍</li><li>widget 对象</li></ul><h2 id="widget-介绍" tabindex="-1"><a class="header-anchor" href="#widget-介绍"><span>Widget 介绍</span></a></h2><p>在flutter的设计哲学中,一切元素和功能都是Widget,比如手势是一个widget,一个文字是一个Widget,以及你看到的所有的可视的内容都是widget</p><h2 id="widget-对象" tabindex="-1"><a class="header-anchor" href="#widget-对象"><span>widget 对象</span></a></h2><p>来说一下 <strong>widget</strong> 对象,在statefulWidget 中 有很多的情景是需要初始数据,如下:</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">ShoppingList</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token class-name">ShoppingList</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required <span class="token keyword">this</span><span class="token punctuation">.</span>products<span class="token punctuation">,</span> <span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 这里就是我们传递的数据</span></span>
<span class="line">  <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">&gt;</span></span> products<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token metadata function">@override</span></span>
<span class="line">  _ShoppingListState <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">_ShoppingListState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> _ShoppingListState <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ShoppingList</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">final</span> _shoppingCart <span class="token operator">=</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">void</span> <span class="token function">_handleCartChanged</span><span class="token punctuation">(</span><span class="token class-name">Product</span> product<span class="token punctuation">,</span> bool inCart<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>inCart<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        _shoppingCart<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>product<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        _shoppingCart<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>product<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token metadata function">@override</span></span>
<span class="line">  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token class-name">Scaffold</span><span class="token punctuation">(</span></span>
<span class="line">      appBar<span class="token punctuation">:</span> <span class="token class-name">AppBar</span><span class="token punctuation">(</span></span>
<span class="line">        title<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Shopping List&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      body<span class="token punctuation">:</span> <span class="token class-name">ListView</span><span class="token punctuation">(</span></span>
<span class="line">        padding<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">symmetric</span><span class="token punctuation">(</span>vertical<span class="token punctuation">:</span> <span class="token number">8.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token comment">// 这里products对象使用,需要通过 widget对象来调用.</span></span>
<span class="line">        <span class="token comment">// 所以widget对象在flutter中等同于 其他语言中的this、self等 指向当前的widget</span></span>
<span class="line">        children<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>products<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Product</span> product<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">return</span> <span class="token class-name">ShoppingListItem</span><span class="token punctuation">(</span></span>
<span class="line">            product<span class="token punctuation">:</span> product<span class="token punctuation">,</span></span>
<span class="line">            inCart<span class="token punctuation">:</span> _shoppingCart<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>product<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            onCartChanged<span class="token punctuation">:</span> _handleCartChanged<span class="token punctuation">,</span></span>
<span class="line">          <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里products对象使用,需要通过 widget对象来调用.</p><p>所以widget对象在flutter中等同于 其他语言中的this、self等 指向当前的widget</p>`,10)]))}const o=s(e,[["render",c],["__file","widgets.html.vue"]]),u=JSON.parse('{"path":"/mobile/flutter/widgets.html","title":"关于Widgets必须知道的事","lang":"en-US","frontmatter":{"title":"关于Widgets必须知道的事","description":"这是必备的基础的Widgets知识.","head":[["meta",{"property":"og:url","content":"http://henrygao.mywire.org/mobile/flutter/widgets.html"}],["meta",{"property":"og:title","content":"关于Widgets必须知道的事"}],["meta",{"property":"og:description","content":"这是必备的基础的Widgets知识."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-04-18T05:33:56.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-18T05:33:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"关于Widgets必须知道的事\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-18T05:33:56.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Widget 介绍","slug":"widget-介绍","link":"#widget-介绍","children":[]},{"level":2,"title":"widget 对象","slug":"widget-对象","link":"#widget-对象","children":[]}],"git":{"updatedTime":1681796036000,"contributors":[{"name":"HenryGao","email":"930127195@qq.com","commits":1}]},"filePathRelative":"mobile/flutter/widgets.md"}');export{o as comp,u as data};
